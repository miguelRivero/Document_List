@use '../partials/button';
@use '../variables' as variables;

.add-document-btn {
  @extend .btn;
  margin-bottom: variables.$margin-lg;
  width: 100%;
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(33, 33, 33, 0.32);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  pointer-events: none;
  transition: opacity variables.$transition-time cubic-bezier(0.4, 0, 0.2, 1);

  &.open {
    opacity: 1;
    pointer-events: all;
  }

  .modal-content {
    background: variables.$color-bg;
    border-radius: variables.$radius;
    box-shadow: variables.$shadow;
    padding: 2.5rem 2.25rem 2rem 2.25rem;
    width: 90%;
    max-width: 600px;
    position: relative;
    animation: modalIn 0.28s cubic-bezier(0.4, 0, 0.2, 1) both;

    @media (max-width: #{variables.$breakpoint-mobile}) {
      width: 95%;
      padding: 1.5rem 1rem;
    }

    .modal-close-btn {
      position: absolute;
      top: 1rem;
      right: 1rem;
      background: none;
      border: none;
      font-size: 1.5rem;
      color: variables.$color-text-secondary;
      cursor: pointer;
      padding: 0.25rem;
      transition: color variables.$transition-time;

      &:hover,
      &:focus {
        color: variables.$color-text;
      }
    }
  }
}

// Form styles specific to the modal context
.modal-form-container {
  #document-form {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
    margin-top: 1rem;

    label {
      display: flex;
      flex-direction: column;
      font-weight: 600;
      color: variables.$color-text;
      font-size: 0.9rem;

      // Style ALL input types consistently
      input[type='text'],
      input[type='number'],
      input {
        margin-top: 0.5rem;
        padding: 0.75rem;
        border: 2px solid variables.$color-border !important;
        border-radius: variables.$radius;
        font-size: 1rem;
        background: white !important;
        color: variables.$color-text;
        transition: border-color variables.$transition-time;
        box-sizing: border-box;
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: textfield;

        &:focus {
          outline: none;
          border-color: variables.$color-primary !important;
        }

        &::placeholder {
          color: variables.$color-text-secondary;
        }
      }

      // Specific styling for number input stepper
      input[type='number']::-webkit-outer-spin-button,
      input[type='number']::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
    }

    // Contributors and Attachments span full width
    label:nth-child(3),
    label:nth-child(4) {
      grid-column: 1 / -1;
    }

    // Submit button spans full width
    .submit-btn {
      @extend .btn;
      grid-column: 1 / -1;
      margin-top: 1rem;
      padding: 0.875rem 1.5rem;
      font-size: 1rem;
    }

    // Form feedback spans full width
    .form-feedback {
      grid-column: 1 / -1;
      margin-top: 1rem;
      padding: 0.75rem;
      border-radius: variables.$radius;
      font-size: 0.9rem;

      &.success {
        background: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
      }

      &.error {
        background: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
      }
    }
  }
}

@keyframes modalIn {
  from {
    transform: translateY(60px) scale(0.98);
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

@media (max-width: #{variables.$breakpoint-mobile}) {
  .modal-form-container form {
    grid-template-columns: 1fr !important;
    gap: 1rem !important;
  }
}
